{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { SharedModule } from './shared/shared.module';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromApp from './store/app.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './auth/store/auth.effects';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@ngrx/effects\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }],\n    imports: [[BrowserModule, AppRoutingModule, HttpClientModule, // RecipesModule, --> for lazy loading to work, make sure not to eagerly import RecipesModule here!\n    // AuthModule,\n    // ShoppingListModule,\n    SharedModule, StoreModule.forRoot(fromApp.appReducer), EffectsModule.forRoot([]), EffectsModule.forFeature([AuthEffects])]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}