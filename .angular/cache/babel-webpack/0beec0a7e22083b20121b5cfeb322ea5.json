{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { exhaustMap, take, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@ngrx/store\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(as, store) {\n      this.as = as;\n      this.store = store;\n    }\n\n    intercept(request, next) {\n      return this.store.select('auth').pipe(take(1), map(state => state.user), exhaustMap(user => {\n        let modifiedReq = request;\n\n        if (user) {\n          modifiedReq = request.clone({\n            params: new HttpParams().set('auth', user.token)\n          });\n        } // console.log('REQ URL');\n        // console.log(modifiedReq.urlWithParams);\n\n\n        return next.handle(modifiedReq);\n      }));\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Store));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}