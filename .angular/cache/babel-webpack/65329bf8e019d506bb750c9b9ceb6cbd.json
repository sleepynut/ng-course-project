{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../recipe.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction RecipeEditComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelement(1, \"img\", 16);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(13);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", _r0.value, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction RecipeEditComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelement(1, \"input\", 18);\n    i0.ɵɵelement(2, \"input\", 19);\n    i0.ɵɵelementStart(3, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function RecipeEditComponent_div_20_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onDeleteIngredient(i_r4);\n    });\n    i0.ɵɵtext(4, \" X \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ing_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"iname\", i_r4, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"name\", i_r4, \"\");\n    i0.ɵɵproperty(\"value\", ing_r3.get(\"name\").value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"iamount\", i_r4, \"\");\n    i0.ɵɵpropertyInterpolate1(\"name\", \"amount\", i_r4, \"\");\n    i0.ɵɵproperty(\"value\", ing_r3.get(\"amount\").value);\n  }\n}\n\nexport let RecipeEditComponent = /*#__PURE__*/(() => {\n  class RecipeEditComponent {\n    constructor(route, rs, router) {\n      this.route = route;\n      this.rs = rs;\n      this.router = router;\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.id = +params['id'];\n        this.initForm();\n      });\n    }\n\n    initForm() {\n      let name;\n      let path;\n      let desc;\n      let ing = new FormArray([]);\n\n      if (!isNaN(this.id)) {\n        let recipe = this.rs.getRecipe(this.id);\n        name = recipe.name;\n        path = recipe.imagePath;\n        desc = recipe.description;\n        if (recipe.ingredients) for (let i of recipe.ingredients) {\n          ing.push(new FormGroup({\n            name: new FormControl(i.name, Validators.required),\n            amount: new FormControl(i.amount, [Validators.required, Validators.pattern(/^[1-9][0-9]*$/)])\n          }));\n        }\n      }\n\n      this.recipeForm = new FormGroup({\n        name: new FormControl(name, Validators.required),\n        imagePath: new FormControl(path, Validators.required),\n        description: new FormControl(desc, Validators.required),\n        ingredients: ing\n      });\n    }\n\n    onSubmit() {\n      if (isNaN(this.id)) this.addRecipe();else this.updateRecipe();\n      this.router.navigate(['..'], {\n        relativeTo: this.route\n      });\n    }\n\n    onCancel() {\n      this.router.navigate(['..'], {\n        relativeTo: this.route\n      });\n    }\n\n    getControls() {\n      return this.recipeForm.get('ingredients').controls;\n    }\n\n    onAddIngredient() {\n      this.recipeForm.get('ingredients').push(new FormGroup({\n        name: new FormControl(null, Validators.required),\n        amount: new FormControl(null, [Validators.required, Validators.pattern(/^[1-9][0-9]*$/)])\n      }));\n    }\n\n    onDeleteIngredient(ingredientIndex) {\n      this.recipeForm.get('ingredients').removeAt(ingredientIndex);\n      this.rs.deleteIngredient(this.id, ingredientIndex);\n    }\n\n    addRecipe() {\n      this.rs.addRecipe(this.recipeForm.value);\n    }\n\n    updateRecipe() {\n      this.rs.updateRecipe(this.id, this.recipeForm.value);\n    }\n\n  }\n\n  RecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n    return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RecipeService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  RecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecipeEditComponent,\n    selectors: [[\"app-recipe-edit\"]],\n    decls: 24,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"me-2\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"row\", \"form-group\", \"mt-3\", \"g-0\"], [\"for\", \"name\", 1, \"form-label\", \"fw-bold\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"imagePath\", 1, \"form-label\", \"fw-bold\"], [\"type\", \"text\", \"id\", \"imagePath\", \"name\", \"imagePath\", \"formControlName\", \"imagePath\", 1, \"form-control\"], [\"imagePreview\", \"\"], [\"class\", \"row mt-3 g-0\", 4, \"ngIf\"], [\"for\", \"description\", 1, \"form-label\", \"fw-bold\", \"w-100\"], [\"id\", \"description\", \"name\", \"description\", \"rows\", \"6\", \"formControlName\", \"description\", 1, \"form-control\"], [\"formArrayName\", \"ingredients\"], [\"class\", \"input-group mt-3 g-0\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"row\", \"mt-3\", \"g-0\"], [\"alt\", \"Image Preview\", 1, \"img-fluid\", 3, \"src\"], [1, \"input-group\", \"mt-3\", \"g-0\", 3, \"formGroupName\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"id\", \"name\", \"value\"], [\"type\", \"number\", \"formControlName\", \"amount\", 1, \"form-control\", 3, \"id\", \"name\", \"value\"], [\"id\", \"cancel\", \"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function RecipeEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RecipeEditComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵtext(2, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_3_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(4, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵelementStart(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Image URL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7, 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, RecipeEditComponent_div_14_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementStart(15, \"div\", 3);\n        i0.ɵɵelementStart(16, \"label\", 10);\n        i0.ɵɵtext(17, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"textarea\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 12);\n        i0.ɵɵtemplate(20, RecipeEditComponent_div_20_Template, 5, 7, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"hr\");\n        i0.ɵɵelementStart(22, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_22_listener() {\n          return ctx.onAddIngredient();\n        });\n        i0.ɵɵtext(23, \" Add Ingredient \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(13);\n\n        i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.recipeForm.valid);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", _r0.value);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getControls());\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgIf, i3.FormArrayName, i4.NgForOf, i3.FormGroupName, i3.NumberValueAccessor],\n    styles: [\"input[id^=iname][_ngcontent-%COMP%]{width:70%}input[id^=iamount][_ngcontent-%COMP%]{width:20%}#cancel[_ngcontent-%COMP%]{width:10%}input.ng-invalid.ng-touched[_ngcontent-%COMP%], textarea.ng-invalid.ng-touched[_ngcontent-%COMP%]{border:2px red solid}\"]\n  });\n  return RecipeEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}