{"ast":null,"code":"import { Ingredient } from '../../shared/ingredient.model';\nimport * as sla from './shopping-list.actions';\nexport const shoppingListFeatureKey = 'shoppingList';\nexport const initialState = {\n  selIngredient: -1,\n  ingredients: [new Ingredient('Apples', 5), new Ingredient('Tomatoes', 10)]\n};\nexport function shoppingListReducer(state = initialState, action) {\n  switch (action.type) {\n    case sla.ShoppingListActionTypes.ADD_INGREDIENT:\n      return Object.assign(Object.assign({}, state), {\n        ingredients: [...state.ingredients, action.payload]\n      });\n\n    case sla.ShoppingListActionTypes.ADD_INGREDIENTS:\n      // console.log(\n      //   'payload: ' + JSON.stringify((<sla.AddIngredients>action).payload)\n      // );\n      return Object.assign(Object.assign({}, state), {\n        ingredients: [...state.ingredients, ...action.payload]\n      });\n\n    case sla.ShoppingListActionTypes.SELECT_INGREDIENT:\n      return Object.assign(Object.assign({}, state), {\n        selIngredient: action.payload\n      });\n\n    case sla.ShoppingListActionTypes.DESELECT_INGREDIENT:\n      return Object.assign(Object.assign({}, state), {\n        selIngredient: -1\n      });\n\n    case sla.ShoppingListActionTypes.DELETE_INGREDIENT:\n      return Object.assign(Object.assign({}, state), {\n        selIngredient: -1,\n        ingredients: state.ingredients.filter((_, index) => {\n          return index != state.selIngredient;\n        })\n      });\n\n    case sla.ShoppingListActionTypes.EDIT_INGREDIENT:\n      // let newIngredient = new Ingredient(\n      //   action.payload.name,\n      //   action.payload.amount\n      // );\n      let newIngredients = [...state.ingredients];\n      newIngredients[state.selIngredient] = action.payload;\n      return Object.assign(Object.assign({}, state), {\n        selIngredient: -1,\n        ingredients: newIngredients\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}